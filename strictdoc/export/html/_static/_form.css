/* [contenteditable=true]:empty:before{
  content: attr(placeholder);
  pointer-events: none;
  display: block;
} */

:root {
  --color-bg-field: white;
}

sdoc-backdrop {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background: rgba(0,0,0,.5);
  z-index: 99999;
}

sdoc-modal {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: min-content 1fr min-content;
  grid-template-areas:
    "modal-header"
    "modal-content"
    "modal-footer";
  place-items: stretch stretch;
  place-content: stretch stretch;

  background-color: var(--color-bg-contrast);
  border-radius: 8px;
  max-width: 90vw;
  max-height: 90vh;
  /* box-shadow: 0 0 0 50vmax rgba(0,0,0,.5), var(--base-elevation-modal); */
  box-shadow: var(--base-elevation-modal);
}

sdoc-modal-header {
  grid-area: modal-header;
  padding-top: calc(var(--base-rhythm)*2);
  padding-bottom: calc(var(--base-rhythm)*2);
}

sdoc-modal-content {
  grid-area: modal-content;
  border-top: var(--base-border);
  border-bottom: var(--base-border);
  padding-top: calc(var(--base-rhythm)*2);
  padding-bottom: calc(var(--base-rhythm)*2);
  overflow: auto;
  scroll-behavior: smooth;
}

sdoc-modal-footer {
  grid-area: modal-footer;
  padding-top: calc(var(--base-rhythm)*2);
  padding-bottom: calc(var(--base-rhythm)*2);
}

sdoc-form {
  display: block;
  background-color: var(--color-bg-contrast);
  border-radius: 3px;
  /* padding: calc(var(--base-padding)) calc(var(--base-padding)*2); */
  box-shadow: var(--base-elevation-node);
  z-index: 10;
}

sdoc-backdrop sdoc-form {
  border-radius: 8px;
  max-width: 90vw;
  max-height: 90vh;
  /* box-shadow: 0 0 0 50vmax rgba(0,0,0,.5), var(--base-elevation-modal); */
  box-shadow: var(--base-elevation-modal);

  overflow: auto;
}

sdoc-form-header {
  display: block;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: calc(var(--base-rhythm)*4);
  padding-right: calc(var(--base-rhythm)*4);
  font-size: 1.25rem;
  font-weight: 600;
}

sdoc-form-row {
  display: block;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: calc(var(--base-rhythm)*4);
  padding-right: calc(var(--base-rhythm)*4);
  margin-top: calc(var(--base-rhythm)*2);
  margin-bottom: calc(var(--base-rhythm)*2);
}

sdoc-form-footer {
  display: flex;
  justify-content: flex-end;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: calc(var(--base-rhythm)*4);
  /* buttons to right: */
  padding-right: calc(var(--base-rhythm)*2);
}

sdoc-form-error {
  display: block;
  color: red;
  font-size: 12px;
  margin-top: calc(var(--base-padding)*0.5);
}

sdoc-contenteditable {
  display: block;
}

/* TODO: delete class: */
.std-form {
  position: relative;
}

.std-form-row {
  background-color: var(--color-bg-field);
  padding: var(--base-padding);
  margin-bottom: calc(var(--base-padding)*0.5);
}

[contenteditable=true] {
  white-space: pre-wrap;
  outline: none;
  /* Without this hack, Chrome generates duplicated new lines when Enter pressed. */
  /* Add style display:inline-block; to contenteditable, it will not generate div, p, span automatic in chrome */
  /* https://stackoverflow.com/a/24689390/598057 */
  display: inline-block;
  /* This is to prevent the field from shifting when the second line appears while typing: */
  vertical-align: top;
  width: 100%;
}

[placeholder]:empty::before {
  content: attr(placeholder);
  pointer-events: none;
  color: #808080;
  /* For Firefox: */
  display: block;
}

[placeholder]:empty:focus::before {
  color: #c0c0c0;
}

.std-form-footer {
  display: flex;
  margin-top: 16px;
}

.std-form-btn {
  font-size:var(--font-size-xsm);
  font-weight: 600;
  text-align: left;
  text-decoration: none;
  white-space: nowrap;
  position: relative;
  display: inline-flex;

  align-items: center;
  justify-content: center;
  -webkit-box-align: center;
  -webkit-box-pack: center;
  border-radius: 6px;
  border: 1px solid transparent;
  backface-visibility: hidden;
  user-select: none;
  cursor: pointer;
  appearance: none;

  /* 1.5 column-gap is compensated by SVG negative margin */
  column-gap: calc(var(--base-rhythm)*1.5);
  padding-left: calc(var(--base-rhythm)*1.5);
  padding-right: calc(var(--base-rhythm)*1.5);
  min-height: calc(var(--base-rhythm)*4);

  /* box-shadow: rgb(0 0 0 / 10%) 0px 1px 2px 0px; */
  color: var(--color-action);
  background-color: rgb(255, 255, 255);
  border-color: rgba(0, 0, 0, 0.05);
  background-clip: padding-box;

  transition: 0.2s;
}

.std-form-btn:hover {
  box-shadow: rgb(0 0 0 / 10%) 0px 2px var(--base-rhythm) 0px;
  color: var(--color-hover);
}

.std-form-btn[type=submit] {
  color: #000;
}

.std-form-btn[href*="cancel"] {
  color: red;
}

.std-form-fileld-title {
  font-size: calc(var(--base-font-size)*1.2);
  font-weight: bold;
}

.std-form-field-rst {
  font-family: var(--code-font-family);
  font-size: 0.9em;
}

.std-form-error {
  color: red;
  font-size: 12px;
  margin-top: calc(var(--base-padding)*0.5);
}
